/* ------------------------------------------------------------- */
/* Dropdown button, merger of bulma and bootstrap
/* -------------------------------------------------------------- */
@use "../tools/misc";

$dropdown-item-disabled-color: $input-disabled-color !default;

// Bulma Overrides
.dropdown-content {
  border: 1px solid $border-light;
}

/** old Bootstrap way **/
.btn-group, .btn-group-vertical {
  position: relative;
  display: inline-block;
  vertical-align: middle;
}

.dropdown-toggle {
  white-space: nowrap;
  // Generate the caret automatically
  @include misc.caret();
}

// The dropdown wrapper (div)
.dropup,
.dropdown {
  position: relative;
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu-list {
  display: block;
  // padding: 0px;
  // position: relative;
  // z-index: 0;
  // Dividers (basically an hr) within the dropdown
  .divider {
    height: 1px;
    margin: 10px 0;
    overflow: hidden;
    background-color: $dropdown-divider-background-color;
  }

  // Links within the dropdown menu
  > li > a {
    display: block;
    padding: 3px 20px;
    clear: both;
    font-weight: 400;
    line-height: $control-line-height;
    color: $dropdown-item-color;
    white-space: nowrap; // prevent links from randomly breaking onto new lines

    &:hover,
    &:focus {
      color: $dropdown-item-hover-color;
      text-decoration: none;
      background-color: $dropdown-item-hover-background-color;
    }
  }
}

// Active state
.dropdown-menu-list > .active > a {
  &,
  &:hover,
  &:focus {
    color: $dropdown-item-active-color;
    text-decoration: none;
    background-color: $dropdown-item-active-background-color;
    outline: 0;
  }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray

.dropdown-menu-list > .disabled > a {
  &,
  &:hover,
  &:focus {
    color: $dropdown-item-disabled-color;
  }

  // Nuke hover/focus effects
  &:hover,
  &:focus {
    text-decoration: none;
    cursor: not-allowed;
    background-color: transparent;
    background-image: none; // Remove CSS gradient
  }
}

// Open state for the dropdown
.open {
  // Show the menu
  > .dropdown-menu {
    display: block;
    // position: relative;
    z-index: 99;
  }

  // Remove the outline when :focus is triggered
  > a {
    outline: 0;
  }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
  right: 0;
  left: auto; // Reset the default from `.dropdown-menu`
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
  right: auto;
  left: 0;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: $text-xxs;
  line-height: $control-line-height;
  color: $text-light;
  white-space: nowrap; // as with > li > a
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: ($dropdown-content-z - 10);
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}
