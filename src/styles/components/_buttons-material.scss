/* ------------------------------------------------------------- */
/* !DEPRECATED ARCHIVE of raised material like buttons
/* https://material.io/components/buttons/#specs
/* -------------------------------------------------------------- */
// !DEPRECATED

/* yak ui - added variables */
$button-font-size: $size-normal !default;
$button-font-weight: $weight-medium !default;
$button-height: 2.25em !default; //36px
$button-icon-size: 1.125em !default; //18px
$button-icon-solo-size: 1.5em !default;  //24px for
$button-icon-button-size: $button-height !default; //36px

$shadow2:  0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
$shadow1: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);
//$shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
$shadow-large: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);

/* ------------------------------------------ */
/* Bulma's button
/* ------------------------------------------ */
.button {
  //text-transform: uppercase; // to sync properly with material we would do this but I don't like it
  // display: inline-block;
  text-align: center;
  // vertical-align: middle;
  font-size: $button-font-size;
  font-weight: $button-font-weight;
  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);
  // text-shadow: 0 1px 1px rgba(255, 255, 255, .75); // old school bootstrap
  height: $button-height;
  padding: 0 $button-padding-horizontal;

  // box-shadow: $shadow1;

  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), background-color 300ms ease;
  justify-content: center;

  &.is-icon-button {
    border-width: 0px;
    width: $button-icon-button-size;
    min-width: $button-icon-button-size;
    padding: 0;
    border-radius: 50%;
    background-color: transparent;
    box-shadow: none;
    .icon {
      &.is-solo, &.is-solo:last-child  {
        margin: 0;
      }
    }
  }

  &.is-hovered,
  &:hover {
    border-color: transparent;
    background-color: darken($button-background-color, 2.5%);
  }

  &.is-active,
  &:active {
    border-color: transparent;
    box-shadow: $shadow2;
  }
  //$button-focus-box-shadow-size: 0 0 0 0.2rem !default
  &.is-focused,
  &:focus {
    border-color: transparent;
    &:not(:active) {
      box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color
    }
  }

  // add specifier to force icon location
  .icon {
    @include iconSize($button-icon-size);
    $margin-calc: calc(#{-1 / 2 * $button-padding-horizontal} - #{$button-border-width});
    &:first-child:not(:last-child),
    &.is-first-child{
      margin-left: $margin-calc;
      margin-right: $button-padding-horizontal / 4;
    }
    &:last-child:not(:first-child),
    &.is-last-child  {
      margin-left: $button-padding-horizontal / 4;
      margin-right: $margin-calc;
    }
    &:first-child:last-child,
    &.is-solo, &.is-solo:last-child  {
      $margin-calc: calc(#{-1 * ($button-icon-button-size - $button-icon-solo-size)} + #{$button-border-width});
      margin-left: $margin-calc;
      margin-right: $margin-calc;
      @include iconSize($button-icon-solo-size);
    }
  }

  // default ripple background
  .ag-ripple {
    background-color: rgba( $button-color, .4)
  }

  // do the is-primary, is-success, etc... fields
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      &.is-hovered,
      &:hover {
        background-color: darken($color, 5%);
      }

      &.is-active,
      &:active {
        box-shadow: $shadow-large;
      }
      // change ripple background based on color
      .ag-ripple {
        background-color: rgba( $color-invert, .4)
      }
      // icon buttons have the icon as the color and tranparent background
      &.is-icon-button {
        color: $color;
        background-color: transparent;
        box-shadow: none;
        &.is-hovered,
        &:hover {
          background-color: rgba( $color, .4)
        }

        &.is-active,
        &:active {
          box-shadow: none;
        }
      }
    }

  }

  &.is-text {
    box-shadow: none;
    border-color: transparent;
    background-color: transparent;
  }

  &.is-flat {
    box-shadow: none;
  }
  &.is-raised {
    box-shadow: $shadow1;
  }

  // Sizes
  &.is-small {
    border-radius: $radius-small;
    font-size: $size-small;
  }
  &.is-normal {
    font-size: $size-14;
  }
  &.is-medium {
    font-size: $size-normal;
  }
  &.is-large {
    font-size: $size-normal;
  }
}

// [ag-ripple] {
//   position: relative;
//   overflow: hidden;
// }
.ag-ripple {
  display: block;
  position: absolute;
  //background-color: rgba(253, 253, 253, 0.4);
  border-radius: 50%;
  transform: scale(0);
}
.ag-ripple.animate {
  animation: ripple 0.5s linear;
}
@keyframes ripple {
  100% {
    opacity: 0;
    transform: scale(2.5);
  }
}

/* when inside field controls make them same height as the control */
.field {
  .control {
    .button {
      height: $control-height;
      &.is-addon {
        box-shadow: none;
        border-color: $input-border-color;
        background-color: $input-background-color
      }
    }
  }
}
