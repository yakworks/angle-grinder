/**
 * CHANGES TO ELEMENT STYLES THEMSELVES
 **/
/** placeholder overides **/
::-moz-placeholder {
  color: #aaa;
  opacity: 1; /* Firefox */
}
::-webkit-input-placeholder {
  color: #aaa;
}

.form-control::-moz-placeholder {
  color: #aaa;
  opacity: 1;
}
.form-control:-ms-input-placeholder {
  color: #aaa;
}
.form-control::-webkit-input-placeholder {
  color: #aaa;
}

// basic defaults for consistency for 3rd party componets we cant control
input[type="text"],
input[type="email"],
input[type="tel"],
input[type="search"],
input[type="url"],
input[type="password"],
input[type="checkbox"],
textarea{
  // display: inline-block;
  // padding: 4px;
  // font-size: 13px;
  // line-height: 18px;
  // color: $input-color;
  // border: 1px solid $input-border-color;
  // border-radius: $control-radius;
}

// select {
//   color: $input-color;
//   -moz-appearance: none;
//   border: 1px solid $input-border-color;
//   border-radius: $control-radius;
// }

// framework7 scrables the core inputs so we reset them here
input[type='text'],
input[type='password'],
input[type='search'],
input[type='email'],
input[type='tel'],
input[type='url'],
input[type='date'],
input[type='month'],
input[type='datetime-local'],
input[type='time'],
input[type='number']{

  &.input {
    color: $input-color;
    border: 1px solid $input-border-color;
    // background-color: $input-background-color;
    // border-radius: $input-radius;
    padding-bottom: $control-padding-vertical;
    padding-left: $control-padding-horizontal;
    padding-right: $control-padding-horizontal;
    padding-top: $control-padding-vertical;
    // color: $input-color;
    // border: 1px solid $input-border-color;
    // border-radius: $control-radius;
  }
}

// input[type="date"]::before, input[type="date"].date5::before{
// 	content: attr(placeholder);
// 	width: 100%;
// }

/* hide our custom/fake placeholder text when in focus to show the default
 * 'mm/dd/yyyy' value and when valid to show the users' date of birth value.
 */
// input[type="date"].date5:focus::before,
// input[type="date"].date5:valid::before {
//   content: "";
//   display: none;
// }

/* create a new arrow, because we are going to mess up the native one
see "List of symbols" below if you want another, you could also try to add a font-awesome icon.. */
// input[type="date"]:after {
//   font-family: "Font Awesome 5 Free";
//   font-weight: 900;
//   content: "\f073";
//   color: #555;
//   padding: 0 5px;
// }

/* change color of symbol on hover */
// input[type="date"]:hover:after {
//   color: #bf1400;
// }

// input[type="date"]::-webkit-datetime-edit {
//   display:none;
// }
// input[type="date"]:focus::-webkit-datetime-edit {
//   display:inline-block;
// }

//##### Serious ugly hacking for html5
input[type="date"], input[type="datetime-local"]  {
  &.date5 {
    position: relative;
    padding-right: 0;
    font-size: $text-sm;
  }
}

/* make the native arrow invisible and stretch it over the whole field so you can click anywhere in the input field to trigger the native datepicker*/
input[type="date"], input[type="datetime-local"]  {
  &::-webkit-calendar-picker-indicator {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: auto;
    height: auto;
    color: transparent;
    background: transparent;
  }
}

/* adjust increase/decrease button */
input[type="date"], input[type="datetime-local"]  {
  &::-webkit-inner-spin-button {
    z-index: 1;
  }
}

/* adjust clear button */
input[type="date"], input[type="datetime-local"]  {
  &::-webkit-clear-button {
    z-index: 1;
  }
}

.item-input-date5 {
  input[type="date"], input[type="datetime-local"] {
    &:not(.input-with-value):not(.input-focused)::before {
      width: 100%;
      content: attr(placeholder);
      color: var(--f7-input-placeholder-color);
    }
    &:not(.input-with-value):not(.input-focused)::-webkit-datetime-edit {
      display:none;
    }
  }

}

