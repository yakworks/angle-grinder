
@use "sass:map";
@use "sass:color";
@use "../tools/util";

// @debug $colors
@each $name, $props in $theme-colors {
  @each $key, $val in $props {
    @if $key == base {
      .text-#{$name}{
        color: cvar($name) !important
      }
      .bg-#{$name} {
        background-color: cvar($name)  !important
      }
    } @else {
      // @debug "#{$name}-#{$key}";
      .text-#{$name}-#{$key}{
        color: cvar($name, $key) !important
      }
      .bg-#{$name}-#{$key}{
        background-color: cvar($name, $key) !important
      }
    }
  }
}

// @debug $colors
@each $shade, $props in $theme-shades {
  $num: util.replace($shade, 'shade-', '');
  $contrast: map.get($props, 'contrast');
  .text-#{$shade}{
    color: cvar(shade, $num) !important
  }
  .text-#{$shade}-contrast{
    color: cvar($contrast) !important
  }
  .bg-#{$shade} {
    background-color: cvar(shade, $num) !important
  }
}

// @each $var_name, $props in $theme-contrast-shades {
//   .text-#{$name}{
//     color: var(--color-#{$name}) !important
//   }
//   .bg-#{$name} {
//     background-color: var(--color-#{$name})  !important
//   }
// }

// @each $name, $shade in $shades
//   .has-text-#{$name}
//     color: $shade !important
//   .has-background-#{$name}
//     background-color: $shade !important
